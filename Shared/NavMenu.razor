@inject NavigationManager NavigationManager

<div class="top-row navbar navbar-dark">
    <div class="container-fluid">
        <button title="Navigation menu" class="navbar-toggler order-0" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
        <a class="navbar-brand text-center mx-auto" href="">@currentPageName</a>
    </div>
</div>

<div class="@NavMenuCssClass" menu nav-scrollable>
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink  class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink  class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink  class="nav-link" href="incidentes">
                <span class="bi bi-exclamation-circle-fill" aria-hidden="true"></span> Incidentes
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="camara">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="crear-incidente">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Crear Incidente
            </NavLink>
        </div>

        <div class="nav-item px-3">
                <NavLink class="nav-link" href="buscar-incidentes">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Buscar Incidentes
                </NavLink>
        </div>


    </nav>
</div>




@code {
    private bool collapseNavMenu = true;
   
    private string currentPageName = "Home"; // Inicializar el nombre de la página como "Home"




    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }


    protected override void OnInitialized()
    {
        base.OnInitialized();

        // Asigna el nombre de la página inicial
        currentPageName = GetPageName();

        // Suscribe al evento LocationChanged para detectar cambios en la URL
        NavigationManager.LocationChanged += HandleLocationChanged;
    }

    private void HandleLocationChanged(object sender, LocationChangedEventArgs e)
    {
        // Actualiza el nombre de la página cuando cambia la ubicación
        currentPageName = GetPageName();

        // Vuelve a renderizar el componente para reflejar el cambio
        StateHasChanged();
    }

  

    private string GetPageName()
    {
        // Obtiene la URL actual
        var currentUrl = NavigationManager.Uri;

        // Obtiene el segmento correspondiente al nombre de la página
        string pageName = currentUrl.Substring(currentUrl.LastIndexOf('/') + 1);

        if(pageName.Length == 0)
        {

            return "Home";

        }

        return pageName;
    }

    public void Dispose()
    {
        // Desuscribe el evento LocationChanged al destruir el componente
        NavigationManager.LocationChanged -= HandleLocationChanged;
    }




}
